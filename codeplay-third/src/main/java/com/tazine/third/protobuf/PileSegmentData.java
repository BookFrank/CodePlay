// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PileSegmentData.proto

package com.tazine.third.protobuf;

public final class PileSegmentData {
  private PileSegmentData() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PileLinkStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PileLinkState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 桩段key
     * </pre>
     *
     * <code>optional string segmentKey = 1;</code>
     */
    String getSegmentKey();
    /**
     * <pre>
     * 桩段key
     * </pre>
     *
     * <code>optional string segmentKey = 1;</code>
     */
    com.google.protobuf.ByteString
        getSegmentKeyBytes();

    /**
     * <pre>
     * 拥堵状态
     * </pre>
     *
     * <code>optional int32 state = 5;</code>
     */
    int getState();

    /**
     * <pre>
     * 平均速度
     * </pre>
     *
     * <code>optional int32 speed = 6;</code>
     */
    int getSpeed();

    /**
     * <pre>
     * 旅行时间
     * </pre>
     *
     * <code>optional int32 travelTime = 7;</code>
     */
    int getTravelTime();
  }
  /**
   * <pre>
   * 桩段路况
   * </pre>
   *
   * Protobuf type {@code PileLinkState}
   */
  public  static final class PileLinkState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PileLinkState)
      PileLinkStateOrBuilder {
    // Use PileLinkState.newBuilder() to construct.
    private PileLinkState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PileLinkState() {
      segmentKey_ = "";
      state_ = 0;
      speed_ = 0;
      travelTime_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PileLinkState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              segmentKey_ = s;
              break;
            }
            case 40: {

              state_ = input.readInt32();
              break;
            }
            case 48: {

              speed_ = input.readInt32();
              break;
            }
            case 56: {

              travelTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return PileSegmentData.internal_static_PileLinkState_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return PileSegmentData.internal_static_PileLinkState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PileLinkState.class, Builder.class);
    }

    public static final int SEGMENTKEY_FIELD_NUMBER = 1;
    private volatile Object segmentKey_;
    /**
     * <pre>
     * 桩段key
     * </pre>
     *
     * <code>optional string segmentKey = 1;</code>
     */
    public String getSegmentKey() {
      Object ref = segmentKey_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        segmentKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 桩段key
     * </pre>
     *
     * <code>optional string segmentKey = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSegmentKeyBytes() {
      Object ref = segmentKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        segmentKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STATE_FIELD_NUMBER = 5;
    private int state_;
    /**
     * <pre>
     * 拥堵状态
     * </pre>
     *
     * <code>optional int32 state = 5;</code>
     */
    public int getState() {
      return state_;
    }

    public static final int SPEED_FIELD_NUMBER = 6;
    private int speed_;
    /**
     * <pre>
     * 平均速度
     * </pre>
     *
     * <code>optional int32 speed = 6;</code>
     */
    public int getSpeed() {
      return speed_;
    }

    public static final int TRAVELTIME_FIELD_NUMBER = 7;
    private int travelTime_;
    /**
     * <pre>
     * 旅行时间
     * </pre>
     *
     * <code>optional int32 travelTime = 7;</code>
     */
    public int getTravelTime() {
      return travelTime_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getSegmentKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, segmentKey_);
      }
      if (state_ != 0) {
        output.writeInt32(5, state_);
      }
      if (speed_ != 0) {
        output.writeInt32(6, speed_);
      }
      if (travelTime_ != 0) {
        output.writeInt32(7, travelTime_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSegmentKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, segmentKey_);
      }
      if (state_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, state_);
      }
      if (speed_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, speed_);
      }
      if (travelTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, travelTime_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof PileLinkState)) {
        return super.equals(obj);
      }
      PileLinkState other = (PileLinkState) obj;

      boolean result = true;
      result = result && getSegmentKey()
          .equals(other.getSegmentKey());
      result = result && (getState()
          == other.getState());
      result = result && (getSpeed()
          == other.getSpeed());
      result = result && (getTravelTime()
          == other.getTravelTime());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + SEGMENTKEY_FIELD_NUMBER;
      hash = (53 * hash) + getSegmentKey().hashCode();
      hash = (37 * hash) + STATE_FIELD_NUMBER;
      hash = (53 * hash) + getState();
      hash = (37 * hash) + SPEED_FIELD_NUMBER;
      hash = (53 * hash) + getSpeed();
      hash = (37 * hash) + TRAVELTIME_FIELD_NUMBER;
      hash = (53 * hash) + getTravelTime();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static PileLinkState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PileLinkState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PileLinkState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PileLinkState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PileLinkState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PileLinkState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static PileLinkState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static PileLinkState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static PileLinkState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PileLinkState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(PileLinkState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 桩段路况
     * </pre>
     *
     * Protobuf type {@code PileLinkState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PileLinkState)
        PileLinkStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return PileSegmentData.internal_static_PileLinkState_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return PileSegmentData.internal_static_PileLinkState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PileLinkState.class, Builder.class);
      }

      // Construct using com.tazine.third.protobuf.PileSegmentData.PileLinkState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        segmentKey_ = "";

        state_ = 0;

        speed_ = 0;

        travelTime_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return PileSegmentData.internal_static_PileLinkState_descriptor;
      }

      public PileLinkState getDefaultInstanceForType() {
        return PileLinkState.getDefaultInstance();
      }

      public PileLinkState build() {
        PileLinkState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public PileLinkState buildPartial() {
        PileLinkState result = new PileLinkState(this);
        result.segmentKey_ = segmentKey_;
        result.state_ = state_;
        result.speed_ = speed_;
        result.travelTime_ = travelTime_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof PileLinkState) {
          return mergeFrom((PileLinkState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PileLinkState other) {
        if (other == PileLinkState.getDefaultInstance()) return this;
        if (!other.getSegmentKey().isEmpty()) {
          segmentKey_ = other.segmentKey_;
          onChanged();
        }
        if (other.getState() != 0) {
          setState(other.getState());
        }
        if (other.getSpeed() != 0) {
          setSpeed(other.getSpeed());
        }
        if (other.getTravelTime() != 0) {
          setTravelTime(other.getTravelTime());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        PileLinkState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (PileLinkState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object segmentKey_ = "";
      /**
       * <pre>
       * 桩段key
       * </pre>
       *
       * <code>optional string segmentKey = 1;</code>
       */
      public String getSegmentKey() {
        Object ref = segmentKey_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          segmentKey_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 桩段key
       * </pre>
       *
       * <code>optional string segmentKey = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSegmentKeyBytes() {
        Object ref = segmentKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          segmentKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 桩段key
       * </pre>
       *
       * <code>optional string segmentKey = 1;</code>
       */
      public Builder setSegmentKey(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        segmentKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 桩段key
       * </pre>
       *
       * <code>optional string segmentKey = 1;</code>
       */
      public Builder clearSegmentKey() {
        
        segmentKey_ = getDefaultInstance().getSegmentKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 桩段key
       * </pre>
       *
       * <code>optional string segmentKey = 1;</code>
       */
      public Builder setSegmentKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        segmentKey_ = value;
        onChanged();
        return this;
      }

      private int state_ ;
      /**
       * <pre>
       * 拥堵状态
       * </pre>
       *
       * <code>optional int32 state = 5;</code>
       */
      public int getState() {
        return state_;
      }
      /**
       * <pre>
       * 拥堵状态
       * </pre>
       *
       * <code>optional int32 state = 5;</code>
       */
      public Builder setState(int value) {
        
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 拥堵状态
       * </pre>
       *
       * <code>optional int32 state = 5;</code>
       */
      public Builder clearState() {
        
        state_ = 0;
        onChanged();
        return this;
      }

      private int speed_ ;
      /**
       * <pre>
       * 平均速度
       * </pre>
       *
       * <code>optional int32 speed = 6;</code>
       */
      public int getSpeed() {
        return speed_;
      }
      /**
       * <pre>
       * 平均速度
       * </pre>
       *
       * <code>optional int32 speed = 6;</code>
       */
      public Builder setSpeed(int value) {
        
        speed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 平均速度
       * </pre>
       *
       * <code>optional int32 speed = 6;</code>
       */
      public Builder clearSpeed() {
        
        speed_ = 0;
        onChanged();
        return this;
      }

      private int travelTime_ ;
      /**
       * <pre>
       * 旅行时间
       * </pre>
       *
       * <code>optional int32 travelTime = 7;</code>
       */
      public int getTravelTime() {
        return travelTime_;
      }
      /**
       * <pre>
       * 旅行时间
       * </pre>
       *
       * <code>optional int32 travelTime = 7;</code>
       */
      public Builder setTravelTime(int value) {
        
        travelTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 旅行时间
       * </pre>
       *
       * <code>optional int32 travelTime = 7;</code>
       */
      public Builder clearTravelTime() {
        
        travelTime_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:PileLinkState)
    }

    // @@protoc_insertion_point(class_scope:PileLinkState)
    private static final PileLinkState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PileLinkState();
    }

    public static PileLinkState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PileLinkState>
        PARSER = new com.google.protobuf.AbstractParser<PileLinkState>() {
      public PileLinkState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PileLinkState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PileLinkState> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<PileLinkState> getParserForType() {
      return PARSER;
    }

    public PileLinkState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HidPileLinkStatesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:HidPileLinkStates)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 道路id
     * </pre>
     *
     * <code>optional string hid = 1;</code>
     */
    String getHid();
    /**
     * <pre>
     * 道路id
     * </pre>
     *
     * <code>optional string hid = 1;</code>
     */
    com.google.protobuf.ByteString
        getHidBytes();

    /**
     * <pre>
     * 桩段路况列表
     * </pre>
     *
     * <code>repeated .PileLinkState pileLinkStates = 2;</code>
     */
    java.util.List<PileLinkState>
        getPileLinkStatesList();
    /**
     * <pre>
     * 桩段路况列表
     * </pre>
     *
     * <code>repeated .PileLinkState pileLinkStates = 2;</code>
     */
    PileLinkState getPileLinkStates(int index);
    /**
     * <pre>
     * 桩段路况列表
     * </pre>
     *
     * <code>repeated .PileLinkState pileLinkStates = 2;</code>
     */
    int getPileLinkStatesCount();
    /**
     * <pre>
     * 桩段路况列表
     * </pre>
     *
     * <code>repeated .PileLinkState pileLinkStates = 2;</code>
     */
    java.util.List<? extends PileLinkStateOrBuilder>
        getPileLinkStatesOrBuilderList();
    /**
     * <pre>
     * 桩段路况列表
     * </pre>
     *
     * <code>repeated .PileLinkState pileLinkStates = 2;</code>
     */
    PileLinkStateOrBuilder getPileLinkStatesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * 道路划分桩段路况列表
   * </pre>
   *
   * Protobuf type {@code HidPileLinkStates}
   */
  public  static final class HidPileLinkStates extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:HidPileLinkStates)
      HidPileLinkStatesOrBuilder {
    // Use HidPileLinkStates.newBuilder() to construct.
    private HidPileLinkStates(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HidPileLinkStates() {
      hid_ = "";
      pileLinkStates_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private HidPileLinkStates(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              hid_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                pileLinkStates_ = new java.util.ArrayList<PileLinkState>();
                mutable_bitField0_ |= 0x00000002;
              }
              pileLinkStates_.add(
                  input.readMessage(PileLinkState.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          pileLinkStates_ = java.util.Collections.unmodifiableList(pileLinkStates_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return PileSegmentData.internal_static_HidPileLinkStates_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return PileSegmentData.internal_static_HidPileLinkStates_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              HidPileLinkStates.class, Builder.class);
    }

    private int bitField0_;
    public static final int HID_FIELD_NUMBER = 1;
    private volatile Object hid_;
    /**
     * <pre>
     * 道路id
     * </pre>
     *
     * <code>optional string hid = 1;</code>
     */
    public String getHid() {
      Object ref = hid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        hid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 道路id
     * </pre>
     *
     * <code>optional string hid = 1;</code>
     */
    public com.google.protobuf.ByteString
        getHidBytes() {
      Object ref = hid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        hid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PILELINKSTATES_FIELD_NUMBER = 2;
    private java.util.List<PileLinkState> pileLinkStates_;
    /**
     * <pre>
     * 桩段路况列表
     * </pre>
     *
     * <code>repeated .PileLinkState pileLinkStates = 2;</code>
     */
    public java.util.List<PileLinkState> getPileLinkStatesList() {
      return pileLinkStates_;
    }
    /**
     * <pre>
     * 桩段路况列表
     * </pre>
     *
     * <code>repeated .PileLinkState pileLinkStates = 2;</code>
     */
    public java.util.List<? extends PileLinkStateOrBuilder>
        getPileLinkStatesOrBuilderList() {
      return pileLinkStates_;
    }
    /**
     * <pre>
     * 桩段路况列表
     * </pre>
     *
     * <code>repeated .PileLinkState pileLinkStates = 2;</code>
     */
    public int getPileLinkStatesCount() {
      return pileLinkStates_.size();
    }
    /**
     * <pre>
     * 桩段路况列表
     * </pre>
     *
     * <code>repeated .PileLinkState pileLinkStates = 2;</code>
     */
    public PileLinkState getPileLinkStates(int index) {
      return pileLinkStates_.get(index);
    }
    /**
     * <pre>
     * 桩段路况列表
     * </pre>
     *
     * <code>repeated .PileLinkState pileLinkStates = 2;</code>
     */
    public PileLinkStateOrBuilder getPileLinkStatesOrBuilder(
        int index) {
      return pileLinkStates_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getHidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, hid_);
      }
      for (int i = 0; i < pileLinkStates_.size(); i++) {
        output.writeMessage(2, pileLinkStates_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getHidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, hid_);
      }
      for (int i = 0; i < pileLinkStates_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, pileLinkStates_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof HidPileLinkStates)) {
        return super.equals(obj);
      }
      HidPileLinkStates other = (HidPileLinkStates) obj;

      boolean result = true;
      result = result && getHid()
          .equals(other.getHid());
      result = result && getPileLinkStatesList()
          .equals(other.getPileLinkStatesList());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + HID_FIELD_NUMBER;
      hash = (53 * hash) + getHid().hashCode();
      if (getPileLinkStatesCount() > 0) {
        hash = (37 * hash) + PILELINKSTATES_FIELD_NUMBER;
        hash = (53 * hash) + getPileLinkStatesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static HidPileLinkStates parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HidPileLinkStates parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HidPileLinkStates parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HidPileLinkStates parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HidPileLinkStates parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static HidPileLinkStates parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static HidPileLinkStates parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static HidPileLinkStates parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static HidPileLinkStates parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static HidPileLinkStates parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(HidPileLinkStates prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 道路划分桩段路况列表
     * </pre>
     *
     * Protobuf type {@code HidPileLinkStates}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:HidPileLinkStates)
        HidPileLinkStatesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return PileSegmentData.internal_static_HidPileLinkStates_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return PileSegmentData.internal_static_HidPileLinkStates_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                HidPileLinkStates.class, Builder.class);
      }

      // Construct using com.tazine.third.protobuf.PileSegmentData.HidPileLinkStates.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPileLinkStatesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        hid_ = "";

        if (pileLinkStatesBuilder_ == null) {
          pileLinkStates_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          pileLinkStatesBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return PileSegmentData.internal_static_HidPileLinkStates_descriptor;
      }

      public HidPileLinkStates getDefaultInstanceForType() {
        return HidPileLinkStates.getDefaultInstance();
      }

      public HidPileLinkStates build() {
        HidPileLinkStates result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public HidPileLinkStates buildPartial() {
        HidPileLinkStates result = new HidPileLinkStates(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.hid_ = hid_;
        if (pileLinkStatesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            pileLinkStates_ = java.util.Collections.unmodifiableList(pileLinkStates_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.pileLinkStates_ = pileLinkStates_;
        } else {
          result.pileLinkStates_ = pileLinkStatesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof HidPileLinkStates) {
          return mergeFrom((HidPileLinkStates)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(HidPileLinkStates other) {
        if (other == HidPileLinkStates.getDefaultInstance()) return this;
        if (!other.getHid().isEmpty()) {
          hid_ = other.hid_;
          onChanged();
        }
        if (pileLinkStatesBuilder_ == null) {
          if (!other.pileLinkStates_.isEmpty()) {
            if (pileLinkStates_.isEmpty()) {
              pileLinkStates_ = other.pileLinkStates_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePileLinkStatesIsMutable();
              pileLinkStates_.addAll(other.pileLinkStates_);
            }
            onChanged();
          }
        } else {
          if (!other.pileLinkStates_.isEmpty()) {
            if (pileLinkStatesBuilder_.isEmpty()) {
              pileLinkStatesBuilder_.dispose();
              pileLinkStatesBuilder_ = null;
              pileLinkStates_ = other.pileLinkStates_;
              bitField0_ = (bitField0_ & ~0x00000002);
              pileLinkStatesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPileLinkStatesFieldBuilder() : null;
            } else {
              pileLinkStatesBuilder_.addAllMessages(other.pileLinkStates_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        HidPileLinkStates parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (HidPileLinkStates) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object hid_ = "";
      /**
       * <pre>
       * 道路id
       * </pre>
       *
       * <code>optional string hid = 1;</code>
       */
      public String getHid() {
        Object ref = hid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          hid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 道路id
       * </pre>
       *
       * <code>optional string hid = 1;</code>
       */
      public com.google.protobuf.ByteString
          getHidBytes() {
        Object ref = hid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          hid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 道路id
       * </pre>
       *
       * <code>optional string hid = 1;</code>
       */
      public Builder setHid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        hid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 道路id
       * </pre>
       *
       * <code>optional string hid = 1;</code>
       */
      public Builder clearHid() {
        
        hid_ = getDefaultInstance().getHid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 道路id
       * </pre>
       *
       * <code>optional string hid = 1;</code>
       */
      public Builder setHidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        hid_ = value;
        onChanged();
        return this;
      }

      private java.util.List<PileLinkState> pileLinkStates_ =
        java.util.Collections.emptyList();
      private void ensurePileLinkStatesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          pileLinkStates_ = new java.util.ArrayList<PileLinkState>(pileLinkStates_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          PileLinkState, PileLinkState.Builder, PileLinkStateOrBuilder> pileLinkStatesBuilder_;

      /**
       * <pre>
       * 桩段路况列表
       * </pre>
       *
       * <code>repeated .PileLinkState pileLinkStates = 2;</code>
       */
      public java.util.List<PileLinkState> getPileLinkStatesList() {
        if (pileLinkStatesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(pileLinkStates_);
        } else {
          return pileLinkStatesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 桩段路况列表
       * </pre>
       *
       * <code>repeated .PileLinkState pileLinkStates = 2;</code>
       */
      public int getPileLinkStatesCount() {
        if (pileLinkStatesBuilder_ == null) {
          return pileLinkStates_.size();
        } else {
          return pileLinkStatesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 桩段路况列表
       * </pre>
       *
       * <code>repeated .PileLinkState pileLinkStates = 2;</code>
       */
      public PileLinkState getPileLinkStates(int index) {
        if (pileLinkStatesBuilder_ == null) {
          return pileLinkStates_.get(index);
        } else {
          return pileLinkStatesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 桩段路况列表
       * </pre>
       *
       * <code>repeated .PileLinkState pileLinkStates = 2;</code>
       */
      public Builder setPileLinkStates(
          int index, PileLinkState value) {
        if (pileLinkStatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePileLinkStatesIsMutable();
          pileLinkStates_.set(index, value);
          onChanged();
        } else {
          pileLinkStatesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 桩段路况列表
       * </pre>
       *
       * <code>repeated .PileLinkState pileLinkStates = 2;</code>
       */
      public Builder setPileLinkStates(
          int index, PileLinkState.Builder builderForValue) {
        if (pileLinkStatesBuilder_ == null) {
          ensurePileLinkStatesIsMutable();
          pileLinkStates_.set(index, builderForValue.build());
          onChanged();
        } else {
          pileLinkStatesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 桩段路况列表
       * </pre>
       *
       * <code>repeated .PileLinkState pileLinkStates = 2;</code>
       */
      public Builder addPileLinkStates(PileLinkState value) {
        if (pileLinkStatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePileLinkStatesIsMutable();
          pileLinkStates_.add(value);
          onChanged();
        } else {
          pileLinkStatesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 桩段路况列表
       * </pre>
       *
       * <code>repeated .PileLinkState pileLinkStates = 2;</code>
       */
      public Builder addPileLinkStates(
          int index, PileLinkState value) {
        if (pileLinkStatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePileLinkStatesIsMutable();
          pileLinkStates_.add(index, value);
          onChanged();
        } else {
          pileLinkStatesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 桩段路况列表
       * </pre>
       *
       * <code>repeated .PileLinkState pileLinkStates = 2;</code>
       */
      public Builder addPileLinkStates(
          PileLinkState.Builder builderForValue) {
        if (pileLinkStatesBuilder_ == null) {
          ensurePileLinkStatesIsMutable();
          pileLinkStates_.add(builderForValue.build());
          onChanged();
        } else {
          pileLinkStatesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 桩段路况列表
       * </pre>
       *
       * <code>repeated .PileLinkState pileLinkStates = 2;</code>
       */
      public Builder addPileLinkStates(
          int index, PileLinkState.Builder builderForValue) {
        if (pileLinkStatesBuilder_ == null) {
          ensurePileLinkStatesIsMutable();
          pileLinkStates_.add(index, builderForValue.build());
          onChanged();
        } else {
          pileLinkStatesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 桩段路况列表
       * </pre>
       *
       * <code>repeated .PileLinkState pileLinkStates = 2;</code>
       */
      public Builder addAllPileLinkStates(
          Iterable<? extends PileLinkState> values) {
        if (pileLinkStatesBuilder_ == null) {
          ensurePileLinkStatesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, pileLinkStates_);
          onChanged();
        } else {
          pileLinkStatesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 桩段路况列表
       * </pre>
       *
       * <code>repeated .PileLinkState pileLinkStates = 2;</code>
       */
      public Builder clearPileLinkStates() {
        if (pileLinkStatesBuilder_ == null) {
          pileLinkStates_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          pileLinkStatesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 桩段路况列表
       * </pre>
       *
       * <code>repeated .PileLinkState pileLinkStates = 2;</code>
       */
      public Builder removePileLinkStates(int index) {
        if (pileLinkStatesBuilder_ == null) {
          ensurePileLinkStatesIsMutable();
          pileLinkStates_.remove(index);
          onChanged();
        } else {
          pileLinkStatesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 桩段路况列表
       * </pre>
       *
       * <code>repeated .PileLinkState pileLinkStates = 2;</code>
       */
      public PileLinkState.Builder getPileLinkStatesBuilder(
          int index) {
        return getPileLinkStatesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 桩段路况列表
       * </pre>
       *
       * <code>repeated .PileLinkState pileLinkStates = 2;</code>
       */
      public PileLinkStateOrBuilder getPileLinkStatesOrBuilder(
          int index) {
        if (pileLinkStatesBuilder_ == null) {
          return pileLinkStates_.get(index);  } else {
          return pileLinkStatesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 桩段路况列表
       * </pre>
       *
       * <code>repeated .PileLinkState pileLinkStates = 2;</code>
       */
      public java.util.List<? extends PileLinkStateOrBuilder>
           getPileLinkStatesOrBuilderList() {
        if (pileLinkStatesBuilder_ != null) {
          return pileLinkStatesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(pileLinkStates_);
        }
      }
      /**
       * <pre>
       * 桩段路况列表
       * </pre>
       *
       * <code>repeated .PileLinkState pileLinkStates = 2;</code>
       */
      public PileLinkState.Builder addPileLinkStatesBuilder() {
        return getPileLinkStatesFieldBuilder().addBuilder(
            PileLinkState.getDefaultInstance());
      }
      /**
       * <pre>
       * 桩段路况列表
       * </pre>
       *
       * <code>repeated .PileLinkState pileLinkStates = 2;</code>
       */
      public PileLinkState.Builder addPileLinkStatesBuilder(
          int index) {
        return getPileLinkStatesFieldBuilder().addBuilder(
            index, PileLinkState.getDefaultInstance());
      }
      /**
       * <pre>
       * 桩段路况列表
       * </pre>
       *
       * <code>repeated .PileLinkState pileLinkStates = 2;</code>
       */
      public java.util.List<PileLinkState.Builder>
           getPileLinkStatesBuilderList() {
        return getPileLinkStatesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          PileLinkState, PileLinkState.Builder, PileLinkStateOrBuilder>
          getPileLinkStatesFieldBuilder() {
        if (pileLinkStatesBuilder_ == null) {
          pileLinkStatesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              PileLinkState, PileLinkState.Builder, PileLinkStateOrBuilder>(
                  pileLinkStates_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          pileLinkStates_ = null;
        }
        return pileLinkStatesBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:HidPileLinkStates)
    }

    // @@protoc_insertion_point(class_scope:HidPileLinkStates)
    private static final HidPileLinkStates DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HidPileLinkStates();
    }

    public static HidPileLinkStates getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HidPileLinkStates>
        PARSER = new com.google.protobuf.AbstractParser<HidPileLinkStates>() {
      public HidPileLinkStates parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new HidPileLinkStates(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HidPileLinkStates> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<HidPileLinkStates> getParserForType() {
      return PARSER;
    }

    public HidPileLinkStates getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HidPileLinkStatesListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:HidPileLinkStatesList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .HidPileLinkStates hidPileLinkStatesList = 1;</code>
     */
    java.util.List<HidPileLinkStates>
        getHidPileLinkStatesListList();
    /**
     * <code>repeated .HidPileLinkStates hidPileLinkStatesList = 1;</code>
     */
    HidPileLinkStates getHidPileLinkStatesList(int index);
    /**
     * <code>repeated .HidPileLinkStates hidPileLinkStatesList = 1;</code>
     */
    int getHidPileLinkStatesListCount();
    /**
     * <code>repeated .HidPileLinkStates hidPileLinkStatesList = 1;</code>
     */
    java.util.List<? extends HidPileLinkStatesOrBuilder>
        getHidPileLinkStatesListOrBuilderList();
    /**
     * <code>repeated .HidPileLinkStates hidPileLinkStatesList = 1;</code>
     */
    HidPileLinkStatesOrBuilder getHidPileLinkStatesListOrBuilder(
        int index);
  }
  /**
   * <pre>
   * 数据集
   * </pre>
   *
   * Protobuf type {@code HidPileLinkStatesList}
   */
  public  static final class HidPileLinkStatesList extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:HidPileLinkStatesList)
      HidPileLinkStatesListOrBuilder {
    // Use HidPileLinkStatesList.newBuilder() to construct.
    private HidPileLinkStatesList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HidPileLinkStatesList() {
      hidPileLinkStatesList_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private HidPileLinkStatesList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                hidPileLinkStatesList_ = new java.util.ArrayList<HidPileLinkStates>();
                mutable_bitField0_ |= 0x00000001;
              }
              hidPileLinkStatesList_.add(
                  input.readMessage(HidPileLinkStates.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          hidPileLinkStatesList_ = java.util.Collections.unmodifiableList(hidPileLinkStatesList_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return PileSegmentData.internal_static_HidPileLinkStatesList_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return PileSegmentData.internal_static_HidPileLinkStatesList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              HidPileLinkStatesList.class, Builder.class);
    }

    public static final int HIDPILELINKSTATESLIST_FIELD_NUMBER = 1;
    private java.util.List<HidPileLinkStates> hidPileLinkStatesList_;
    /**
     * <code>repeated .HidPileLinkStates hidPileLinkStatesList = 1;</code>
     */
    public java.util.List<HidPileLinkStates> getHidPileLinkStatesListList() {
      return hidPileLinkStatesList_;
    }
    /**
     * <code>repeated .HidPileLinkStates hidPileLinkStatesList = 1;</code>
     */
    public java.util.List<? extends HidPileLinkStatesOrBuilder>
        getHidPileLinkStatesListOrBuilderList() {
      return hidPileLinkStatesList_;
    }
    /**
     * <code>repeated .HidPileLinkStates hidPileLinkStatesList = 1;</code>
     */
    public int getHidPileLinkStatesListCount() {
      return hidPileLinkStatesList_.size();
    }
    /**
     * <code>repeated .HidPileLinkStates hidPileLinkStatesList = 1;</code>
     */
    public HidPileLinkStates getHidPileLinkStatesList(int index) {
      return hidPileLinkStatesList_.get(index);
    }
    /**
     * <code>repeated .HidPileLinkStates hidPileLinkStatesList = 1;</code>
     */
    public HidPileLinkStatesOrBuilder getHidPileLinkStatesListOrBuilder(
        int index) {
      return hidPileLinkStatesList_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < hidPileLinkStatesList_.size(); i++) {
        output.writeMessage(1, hidPileLinkStatesList_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < hidPileLinkStatesList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, hidPileLinkStatesList_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof HidPileLinkStatesList)) {
        return super.equals(obj);
      }
      HidPileLinkStatesList other = (HidPileLinkStatesList) obj;

      boolean result = true;
      result = result && getHidPileLinkStatesListList()
          .equals(other.getHidPileLinkStatesListList());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getHidPileLinkStatesListCount() > 0) {
        hash = (37 * hash) + HIDPILELINKSTATESLIST_FIELD_NUMBER;
        hash = (53 * hash) + getHidPileLinkStatesListList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static HidPileLinkStatesList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HidPileLinkStatesList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HidPileLinkStatesList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HidPileLinkStatesList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HidPileLinkStatesList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static HidPileLinkStatesList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static HidPileLinkStatesList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static HidPileLinkStatesList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static HidPileLinkStatesList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static HidPileLinkStatesList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(HidPileLinkStatesList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 数据集
     * </pre>
     *
     * Protobuf type {@code HidPileLinkStatesList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:HidPileLinkStatesList)
        HidPileLinkStatesListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return PileSegmentData.internal_static_HidPileLinkStatesList_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return PileSegmentData.internal_static_HidPileLinkStatesList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                HidPileLinkStatesList.class, Builder.class);
      }

      // Construct using com.tazine.third.protobuf.PileSegmentData.HidPileLinkStatesList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getHidPileLinkStatesListFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (hidPileLinkStatesListBuilder_ == null) {
          hidPileLinkStatesList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          hidPileLinkStatesListBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return PileSegmentData.internal_static_HidPileLinkStatesList_descriptor;
      }

      public HidPileLinkStatesList getDefaultInstanceForType() {
        return HidPileLinkStatesList.getDefaultInstance();
      }

      public HidPileLinkStatesList build() {
        HidPileLinkStatesList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public HidPileLinkStatesList buildPartial() {
        HidPileLinkStatesList result = new HidPileLinkStatesList(this);
        int from_bitField0_ = bitField0_;
        if (hidPileLinkStatesListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            hidPileLinkStatesList_ = java.util.Collections.unmodifiableList(hidPileLinkStatesList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.hidPileLinkStatesList_ = hidPileLinkStatesList_;
        } else {
          result.hidPileLinkStatesList_ = hidPileLinkStatesListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof HidPileLinkStatesList) {
          return mergeFrom((HidPileLinkStatesList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(HidPileLinkStatesList other) {
        if (other == HidPileLinkStatesList.getDefaultInstance()) return this;
        if (hidPileLinkStatesListBuilder_ == null) {
          if (!other.hidPileLinkStatesList_.isEmpty()) {
            if (hidPileLinkStatesList_.isEmpty()) {
              hidPileLinkStatesList_ = other.hidPileLinkStatesList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureHidPileLinkStatesListIsMutable();
              hidPileLinkStatesList_.addAll(other.hidPileLinkStatesList_);
            }
            onChanged();
          }
        } else {
          if (!other.hidPileLinkStatesList_.isEmpty()) {
            if (hidPileLinkStatesListBuilder_.isEmpty()) {
              hidPileLinkStatesListBuilder_.dispose();
              hidPileLinkStatesListBuilder_ = null;
              hidPileLinkStatesList_ = other.hidPileLinkStatesList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              hidPileLinkStatesListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getHidPileLinkStatesListFieldBuilder() : null;
            } else {
              hidPileLinkStatesListBuilder_.addAllMessages(other.hidPileLinkStatesList_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        HidPileLinkStatesList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (HidPileLinkStatesList) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<HidPileLinkStates> hidPileLinkStatesList_ =
        java.util.Collections.emptyList();
      private void ensureHidPileLinkStatesListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          hidPileLinkStatesList_ = new java.util.ArrayList<HidPileLinkStates>(hidPileLinkStatesList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          HidPileLinkStates, HidPileLinkStates.Builder, HidPileLinkStatesOrBuilder> hidPileLinkStatesListBuilder_;

      /**
       * <code>repeated .HidPileLinkStates hidPileLinkStatesList = 1;</code>
       */
      public java.util.List<HidPileLinkStates> getHidPileLinkStatesListList() {
        if (hidPileLinkStatesListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(hidPileLinkStatesList_);
        } else {
          return hidPileLinkStatesListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .HidPileLinkStates hidPileLinkStatesList = 1;</code>
       */
      public int getHidPileLinkStatesListCount() {
        if (hidPileLinkStatesListBuilder_ == null) {
          return hidPileLinkStatesList_.size();
        } else {
          return hidPileLinkStatesListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .HidPileLinkStates hidPileLinkStatesList = 1;</code>
       */
      public HidPileLinkStates getHidPileLinkStatesList(int index) {
        if (hidPileLinkStatesListBuilder_ == null) {
          return hidPileLinkStatesList_.get(index);
        } else {
          return hidPileLinkStatesListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .HidPileLinkStates hidPileLinkStatesList = 1;</code>
       */
      public Builder setHidPileLinkStatesList(
          int index, HidPileLinkStates value) {
        if (hidPileLinkStatesListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHidPileLinkStatesListIsMutable();
          hidPileLinkStatesList_.set(index, value);
          onChanged();
        } else {
          hidPileLinkStatesListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .HidPileLinkStates hidPileLinkStatesList = 1;</code>
       */
      public Builder setHidPileLinkStatesList(
          int index, HidPileLinkStates.Builder builderForValue) {
        if (hidPileLinkStatesListBuilder_ == null) {
          ensureHidPileLinkStatesListIsMutable();
          hidPileLinkStatesList_.set(index, builderForValue.build());
          onChanged();
        } else {
          hidPileLinkStatesListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .HidPileLinkStates hidPileLinkStatesList = 1;</code>
       */
      public Builder addHidPileLinkStatesList(HidPileLinkStates value) {
        if (hidPileLinkStatesListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHidPileLinkStatesListIsMutable();
          hidPileLinkStatesList_.add(value);
          onChanged();
        } else {
          hidPileLinkStatesListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .HidPileLinkStates hidPileLinkStatesList = 1;</code>
       */
      public Builder addHidPileLinkStatesList(
          int index, HidPileLinkStates value) {
        if (hidPileLinkStatesListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHidPileLinkStatesListIsMutable();
          hidPileLinkStatesList_.add(index, value);
          onChanged();
        } else {
          hidPileLinkStatesListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .HidPileLinkStates hidPileLinkStatesList = 1;</code>
       */
      public Builder addHidPileLinkStatesList(
          HidPileLinkStates.Builder builderForValue) {
        if (hidPileLinkStatesListBuilder_ == null) {
          ensureHidPileLinkStatesListIsMutable();
          hidPileLinkStatesList_.add(builderForValue.build());
          onChanged();
        } else {
          hidPileLinkStatesListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .HidPileLinkStates hidPileLinkStatesList = 1;</code>
       */
      public Builder addHidPileLinkStatesList(
          int index, HidPileLinkStates.Builder builderForValue) {
        if (hidPileLinkStatesListBuilder_ == null) {
          ensureHidPileLinkStatesListIsMutable();
          hidPileLinkStatesList_.add(index, builderForValue.build());
          onChanged();
        } else {
          hidPileLinkStatesListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .HidPileLinkStates hidPileLinkStatesList = 1;</code>
       */
      public Builder addAllHidPileLinkStatesList(
          Iterable<? extends HidPileLinkStates> values) {
        if (hidPileLinkStatesListBuilder_ == null) {
          ensureHidPileLinkStatesListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, hidPileLinkStatesList_);
          onChanged();
        } else {
          hidPileLinkStatesListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .HidPileLinkStates hidPileLinkStatesList = 1;</code>
       */
      public Builder clearHidPileLinkStatesList() {
        if (hidPileLinkStatesListBuilder_ == null) {
          hidPileLinkStatesList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          hidPileLinkStatesListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .HidPileLinkStates hidPileLinkStatesList = 1;</code>
       */
      public Builder removeHidPileLinkStatesList(int index) {
        if (hidPileLinkStatesListBuilder_ == null) {
          ensureHidPileLinkStatesListIsMutable();
          hidPileLinkStatesList_.remove(index);
          onChanged();
        } else {
          hidPileLinkStatesListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .HidPileLinkStates hidPileLinkStatesList = 1;</code>
       */
      public HidPileLinkStates.Builder getHidPileLinkStatesListBuilder(
          int index) {
        return getHidPileLinkStatesListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .HidPileLinkStates hidPileLinkStatesList = 1;</code>
       */
      public HidPileLinkStatesOrBuilder getHidPileLinkStatesListOrBuilder(
          int index) {
        if (hidPileLinkStatesListBuilder_ == null) {
          return hidPileLinkStatesList_.get(index);  } else {
          return hidPileLinkStatesListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .HidPileLinkStates hidPileLinkStatesList = 1;</code>
       */
      public java.util.List<? extends HidPileLinkStatesOrBuilder>
           getHidPileLinkStatesListOrBuilderList() {
        if (hidPileLinkStatesListBuilder_ != null) {
          return hidPileLinkStatesListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(hidPileLinkStatesList_);
        }
      }
      /**
       * <code>repeated .HidPileLinkStates hidPileLinkStatesList = 1;</code>
       */
      public HidPileLinkStates.Builder addHidPileLinkStatesListBuilder() {
        return getHidPileLinkStatesListFieldBuilder().addBuilder(
            HidPileLinkStates.getDefaultInstance());
      }
      /**
       * <code>repeated .HidPileLinkStates hidPileLinkStatesList = 1;</code>
       */
      public HidPileLinkStates.Builder addHidPileLinkStatesListBuilder(
          int index) {
        return getHidPileLinkStatesListFieldBuilder().addBuilder(
            index, HidPileLinkStates.getDefaultInstance());
      }
      /**
       * <code>repeated .HidPileLinkStates hidPileLinkStatesList = 1;</code>
       */
      public java.util.List<HidPileLinkStates.Builder>
           getHidPileLinkStatesListBuilderList() {
        return getHidPileLinkStatesListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          HidPileLinkStates, HidPileLinkStates.Builder, HidPileLinkStatesOrBuilder>
          getHidPileLinkStatesListFieldBuilder() {
        if (hidPileLinkStatesListBuilder_ == null) {
          hidPileLinkStatesListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              HidPileLinkStates, HidPileLinkStates.Builder, HidPileLinkStatesOrBuilder>(
                  hidPileLinkStatesList_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          hidPileLinkStatesList_ = null;
        }
        return hidPileLinkStatesListBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:HidPileLinkStatesList)
    }

    // @@protoc_insertion_point(class_scope:HidPileLinkStatesList)
    private static final HidPileLinkStatesList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HidPileLinkStatesList();
    }

    public static HidPileLinkStatesList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HidPileLinkStatesList>
        PARSER = new com.google.protobuf.AbstractParser<HidPileLinkStatesList>() {
      public HidPileLinkStatesList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new HidPileLinkStatesList(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HidPileLinkStatesList> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<HidPileLinkStatesList> getParserForType() {
      return PARSER;
    }

    public HidPileLinkStatesList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PileLinkState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PileLinkState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_HidPileLinkStates_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_HidPileLinkStates_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_HidPileLinkStatesList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_HidPileLinkStatesList_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\025PileSegmentData.proto\"U\n\rPileLinkState" +
      "\022\022\n\nsegmentKey\030\001 \001(\t\022\r\n\005state\030\005 \001(\005\022\r\n\005s" +
      "peed\030\006 \001(\005\022\022\n\ntravelTime\030\007 \001(\005\"H\n\021HidPil" +
      "eLinkStates\022\013\n\003hid\030\001 \001(\t\022&\n\016pileLinkStat" +
      "es\030\002 \003(\0132\016.PileLinkState\"J\n\025HidPileLinkS" +
      "tatesList\0221\n\025hidPileLinkStatesList\030\001 \003(\013" +
      "2\022.HidPileLinkStatesB,\n\031com.tazine.third" +
      ".protobufB\017PileSegmentDatab\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_PileLinkState_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_PileLinkState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PileLinkState_descriptor,
        new String[] { "SegmentKey", "State", "Speed", "TravelTime", });
    internal_static_HidPileLinkStates_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_HidPileLinkStates_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_HidPileLinkStates_descriptor,
        new String[] { "Hid", "PileLinkStates", });
    internal_static_HidPileLinkStatesList_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_HidPileLinkStatesList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_HidPileLinkStatesList_descriptor,
        new String[] { "HidPileLinkStatesList", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
